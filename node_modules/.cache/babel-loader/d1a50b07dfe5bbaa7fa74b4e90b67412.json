{"ast":null,"code":"import _slicedToArray from \"/Users/bradleymorrison/MSC/freya-react-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bradleymorrison/MSC/freya-react-1/src/AppWrapper.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport App from './App';\nimport { Login } from './pages/Login';\nimport { Error } from './pages/Error';\nimport { NotFound } from './pages/NotFound';\nimport { Access } from './pages/Access';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ctx = /*#__PURE__*/React.createContext();\n\nvar AppWrapper = function AppWrapper(props) {\n  _s();\n\n  var location = useLocation();\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  var _useState = useState('light'),\n      _useState2 = _slicedToArray(_useState, 2),\n      colorScheme = _useState2[0],\n      setColorScheme = _useState2[1];\n\n  switch (props.location.pathname) {\n    case '/login':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        render: function render() {\n          return /*#__PURE__*/_jsxDEV(Login, {\n            colorScheme: colorScheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 46\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, _this);\n\n    case '/error':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/error\",\n        render: function render() {\n          return /*#__PURE__*/_jsxDEV(Error, {\n            colorScheme: colorScheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 46\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, _this);\n\n    case '/notfound':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/notfound\",\n        render: function render() {\n          return /*#__PURE__*/_jsxDEV(NotFound, {\n            colorScheme: colorScheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 49\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, _this);\n\n    case '/access':\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/access\",\n        render: function render() {\n          return /*#__PURE__*/_jsxDEV(Access, {\n            colorScheme: colorScheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 47\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, _this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(App, {\n        setColorScheme: setColorScheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this);\n  }\n};\n\n_s(AppWrapper, \"QAPqh92HlgrDNTBUAwQJyULnpMw=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppWrapper;\nexport default _c2 = withRouter(AppWrapper);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/bradleymorrison/MSC/freya-react-1/src/AppWrapper.js"],"names":["React","useEffect","useState","Route","withRouter","useLocation","App","Login","Error","NotFound","Access","ctx","createContext","AppWrapper","props","location","window","scrollTo","colorScheme","setColorScheme","pathname"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,OAAO,IAAMC,GAAG,gBAAGX,KAAK,CAACY,aAAN,EAAZ;;AAEP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAC7B,MAAIC,QAAQ,GAAGV,WAAW,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACfe,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;;AAIA,kBAAsCb,QAAQ,CAAC,OAAD,CAA9C;AAAA;AAAA,MAAOgB,WAAP;AAAA,MAAoBC,cAApB;;AAEA,UAAQL,KAAK,CAACC,QAAN,CAAeK,QAAvB;AACC,SAAK,QAAL;AACC,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE;AAAA,8BAAM,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,eAAP;;AACD,SAAK,QAAL;AACC,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE;AAAA,8BAAM,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,eAAP;;AACD,SAAK,WAAL;AACC,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAE;AAAA,8BAAM,QAAC,QAAD;AAAU,YAAA,WAAW,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,eAAP;;AACD,SAAK,SAAL;AACC,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,MAAM,EAAE;AAAA,8BAAM,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,mBAAN;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,eAAP;;AACD;AACC,0BAAO,QAAC,GAAD;AAAK,QAAA,cAAc,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,eAAP;AAVF;AAaA,CAtBD;;GAAMN,U;UACUR,W;;;KADVQ,U;AAwBN,qBAAeT,UAAU,CAACS,UAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, withRouter, useLocation } from 'react-router-dom';\nimport App from './App';\nimport { Login } from './pages/Login';\nimport { Error } from './pages/Error';\nimport { NotFound } from './pages/NotFound';\nimport { Access } from './pages/Access';\n\nexport const ctx = React.createContext()\n\nconst AppWrapper = (props) => {\n\tlet location = useLocation();\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0)\n\t}, [location]);\n\n\tconst [colorScheme, setColorScheme] = useState('light')\n\n\tswitch (props.location.pathname) {\n\t\tcase '/login':\n\t\t\treturn <Route path=\"/login\" render={() => <Login colorScheme={colorScheme} />} />\n\t\tcase '/error':\n\t\t\treturn <Route path=\"/error\" render={() => <Error colorScheme={colorScheme} />} />\n\t\tcase '/notfound':\n\t\t\treturn <Route path=\"/notfound\" render={() => <NotFound colorScheme={colorScheme} />} />\n\t\tcase '/access':\n\t\t\treturn <Route path=\"/access\" render={() => <Access colorScheme={colorScheme} />} />\n\t\tdefault:\n\t\t\treturn <App setColorScheme={setColorScheme} />;\n\t}\n\n}\n\nexport default withRouter(AppWrapper);"]},"metadata":{},"sourceType":"module"}